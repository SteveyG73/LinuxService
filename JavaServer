#!/bin/sh
SERVICE_NAME=JavaServer
PATH_TO_JAR=/opt/JavaServer/lib/JavaServer
PID_PATH_NAME=/opt/JavaServer/config/JavaServer.pid
case $1 in
    start)
        echo "Starting $SERVICE_NAME ..."
        if [ ! -f $PID_PATH_NAME ]; then
            nohup java -Dlog4j.configurationFile=$PATH_TO_JAR/config/log4j2.xml -cp "$PATH_TO_JAR/JavaServer.jar:$PATH_TO_JAR/lib/*" javaserver.JavaServer /tmp 2>> /dev/null >> /dev/null &
                        echo $! > $PID_PATH_NAME
            echo "$SERVICE_NAME started ..."
        else
            echo "$SERVICE_NAME is already running ..."
        fi
    ;;
    stop)
        if [ -f $PID_PATH_NAME ]; then
            PID=$(cat $PID_PATH_NAME);
            echo "$SERVICE_NAME stoping ..."
            kill $PID;
            echo "$SERVICE_NAME stopped ..."
            rm $PID_PATH_NAME
        else
            echo "$SERVICE_NAME is not running ..."
        fi
    ;;
    restart)
        if [ -f $PID_PATH_NAME ]; then
            PID=$(cat $PID_PATH_NAME);
            echo "$SERVICE_NAME stopping ...";
            kill $PID;
            echo "$SERVICE_NAME stopped ...";
            rm $PID_PATH_NAME
            sleep 5
            echo "$SERVICE_NAME starting ..."
            nohup java -jar $PATH_TO_JAR /tmp 2>> /dev/null >> /dev/null &
                        echo $! > $PID_PATH_NAME
            echo "$SERVICE_NAME started ..."
        else
            echo "$SERVICE_NAME is not running ..."
        fi
    ;;
    status)
        if [ -f $PID_PATH_NAME ]; then
           PID=$(cat $PID_PATH_NAME);
           if ps -p $PID > /dev/null; then
               echo "$SERVICE_NAME is running as process ID $PID..."
           else
               echo "$SERVICE_NAME has a PID file but is not running..."
           fi
        else
           echo "$SERVICE_NAME has no PID file, assume it is not running..."
        fi
    ;;
esac
